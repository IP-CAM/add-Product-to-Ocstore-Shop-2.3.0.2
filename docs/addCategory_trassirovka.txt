в опен карт могут быть одинаковые имена категорий.
сделаем допущение, что их не будет в реальном магазине, т.е. в массиве M одинаковых елементов быть не должно!

function catExist(x, mi) {
  if (strpos(mi, x) == 0) {
    return 1
  } else {
    return 0
  }
}

1) x = (abcd); M = [ bac, abc, dbc ]; res = []
цикл пока длина x не равна 0
  итерация 1 // x = (abcd); res = []
    abcd != (bac || abc || dbc) // foreach (M as m) if x==m
    abcd => abc; res = [d] // res = array_pop(x)
  конец итерации 1
  итерация 2 // x = (abc); res = [d]
    abc == abc // Нашли! M[1]
    Делаем инъекцию x в M[1]
    //  newCats = []; // Массив объектов Category, для новосозданных категорий
    //  for (i=0; i<count(res); i++) {
    //    if (i=0) {  
    //      newCats[i] = Category(name=res[i], parent_id=M[1][length(x-1)].getId()) // конструктор Category добавляет в базу категорию и сохраняет из базы last_insert_id в свойство класса Category->id      
    //    } else if (i>0) {
    //      newCats[i] = Category(name=res[i], newCats[i-1]->getCatId())
    //    } else throw new exception(ошибка логики)       
    //  }
      newCats = []
      newCats[0] = Category(name='d', parent_id='6')
    конец
  конец итерации 2
конеч цикла
 
2) x = (abde); M = [ bac, abc, dbc ]; res = []
цикл пока длина x не равна 0
  итерация 1
    abde != (bac || abc || dbc)
    abde => abd; res = [e]
  конец итерации 1
  итерация 2 
    abd != (bac || abc || dbc)
    abd => ab; res = [d, e]
  конец итерации 2
  итерация 3
    catExist(M[1], ab) == 1 // нашли!
    инъекция(x=ab, M[1])
  конеч итерации 3
конеч цикла


/////////////// UPDATE  ////////////////////
Задача упрощается. Теперь в массиве M учавствуют все категории, не только самые длинные. Алгоритм надо переделать, но он станет проще.

